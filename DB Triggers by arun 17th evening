select * from btrs_amenities

select * from btrs_types_amenities

select * from btrs_bustypes

select * from btrs_buses

select * from btrs_routes

select * from btrs_trips

select * from btrs_services order by collection desc;

select * from btrs_stops

select * from btrs_stp_distances

select * from btrs_bus_seats

select * from btrs_trip_stops

select * from btrs_users

select * from btrs_distance_fares

/*drop table btrs_schedule*/
select * from btrs_schedule

select * from btrs_seat_book

/*drop table btrs_seats_booked*/
select * from btrs_seats_booked

select * from btrs_service_stops

select * from btrs_ticket_passengers

select * from btrs_tickets

select * from btrs_user_passengers




























/////////////////////////////////////////////////////////////////////////
/* This is just to update seats count in services table*/
CREATE OR REPLACE FUNCTION auto_update_seats_count()
RETURNS TRIGGER AS $$

BEGIN
    IF NEW.status = true THEN
		update btrs_services set seats_available=seats_available-1 where btrs_services.service_id=new.service_id;
  END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_seats_count
AFTER INSERT ON btrs_seat_book
FOR EACH ROW
EXECUTE FUNCTION auto_update_seats_count();
////////////////////////////////////////////////////////////////////////
/* This is just to update collection in services table*/
CREATE OR REPLACE FUNCTION auto_update_collection()
RETURNS TRIGGER AS $$

BEGIN
    IF NEW.status = 'confirmed' THEN
		update btrs_services set collection=collection+new.total_fare where btrs_services.service_id=new.service_id;
  END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_collection
AFTER INSERT ON btrs_tickets
FOR EACH ROW
EXECUTE FUNCTION auto_update_collection();

//////////////////////////////////////////////////////////////////
CREATE OR REPLACE FUNCTION auto_update_female_logic()
RETURNS TRIGGER AS $$
DECLARE
    v_service_id INT;
    curr_seat_no int;
    curr_seat_status boolean;
    curr_seat_gender varchar;
    beside_seat_no int;
    beside_seat_status boolean;
    beside_seat_gender varchar;
BEGIN

    SELECT service_id INTO v_service_id
    FROM btrs_tickets
    WHERE booking_id = NEW.booking_id;
    
    
    curr_seat_no:=new.seat_no;
    
    SELECT status, gender
    INTO curr_seat_status, curr_seat_gender
    FROM btrs_seat_book
    WHERE seat_id = curr_seat_no AND service_id = v_service_id;

    RAISE NOTICE 'curr_seat_no: % curr_seat_status: %, curr_seat_gender: %',curr_seat_no,curr_seat_status, curr_seat_gender;
IF NEW.gender = 'Female' THEN
    			IF NEW.seat_no<=24 THEN
                		IF curr_seat_status=false and curr_seat_gender='Female' THEN
                        		update btrs_seat_book set status=true where service_id=v_service_id and seat_id=new.seat_no;
                		ELSIF NEW.seat_no%2 =0 THEN
                        		beside_seat_no=new.seat_no-1;
                                select status,gender into beside_seat_status,beside_seat_gender from btrs_seat_book
                                where seat_id=beside_seat_no and service_id=v_service_id;
                                insert into btrs_seat_book values(v_service_id,new.seat_no,true,'Female');
                                 RAISE NOTICE 'beside seat status %s number%s gender %s',beside_seat_status,beside_seat_no,beside_seat_gender;
                             	IF (beside_seat_status is null) THEN                       		
                                     insert into btrs_seat_book values(v_service_id,beside_seat_no,false,'Female');
                                END IF;
                        ELSIF NEW.seat_no%2 !=0 THEN
                        		beside_seat_no=new.seat_no+1;
                                select status,gender into beside_seat_status,beside_seat_gender from btrs_seat_book
                                where seat_id=beside_seat_no and service_id=v_service_id;
                                insert into btrs_seat_book values(v_service_id,new.seat_no,true,'Female');
                                 RAISE NOTICE 'beside seat status %s number%s gender %s',beside_seat_status,beside_seat_no,beside_seat_gender;
                             	IF (beside_seat_status is null) THEN                       		
                                     insert into btrs_seat_book values(v_service_id,beside_seat_no,false,'Female');
                                END IF;
                        END IF;
                 ELSIF 	(NEW.seat_no>24 and NEW.seat_no<=32) THEN
                        insert into btrs_seat_book values(v_service_id,new.seat_no,true,'Female');
				 END IF;
     ELSE
                 insert into btrs_seat_book values(v_service_id,new.seat_no,true,NEW.gender);
     END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;



CREATE TRIGGER female_logic_trigger
AFTER INSERT ON btrs_ticket_passengers
FOR EACH ROW
EXECUTE FUNCTION auto_update_female_logic();
//////////////////////////////////////////////////////////////////////////////////////////////////
CREATE OR REPLACE FUNCTION update_seats_count_if_status_updated()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.status = true AND OLD.status = false THEN
        -- Status changed from false to true
        UPDATE btrs_services
        SET seats_available = seats_available - 1
        WHERE service_id = NEW.service_id;
    ELSIF NEW.status = false AND OLD.status = true THEN
        -- Status changed from true to false
        UPDATE btrs_services
        SET seats_available = seats_available + 1
        WHERE service_id = NEW.service_id;
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_seats_count_trigger_if_status_updated
AFTER UPDATE ON btrs_seat_book
FOR EACH ROW
EXECUTE FUNCTION update_seats_count_if_status_updated();
/////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////

select * from btrs_seat_book
select * from btrs_services order by collection desc;
select * from btrs_tickets
select * from btrs_ticket_passengers

insert into btrs_tickets values(102614662023617123456788,'dummy_payment',8,date '2023-06-17',now()::time,942,1026,1466,'card',4000,'confirmed',4)

insert into btrs_ticket_passengers values(102614662023617123456788,1,'Arun',22,'Male',3,330);
insert into btrs_ticket_passengers values(102614662023617123456788,2,'Arun',22,'Other',1,330);
insert into btrs_ticket_passengers values(102614662023617123456788,3,'Arun',22,'Female',5,330);
insert into btrs_ticket_passengers values(102614662023617123456788,4,'Arun',22,'Female',24,330);
insert into btrs_ticket_passengers values(102614662023617123456788,5,'Arun',22,'Female',6,330);
insert into btrs_ticket_passengers values(102614662023617123456788,6,'Arun',22,'Female',23,330);
insert into btrs_ticket_passengers values(102614662023617123456788,7,'Arun',22,'Female',21,330);
insert into btrs_ticket_passengers values(102614662023617123456788,8,'Arun',22,'Female',20,330);
insert into btrs_ticket_passengers values(102614662023617123456788,9,'Arun',22,'Female',7,330);
insert into btrs_ticket_passengers values(102614662023617123456788,10,'Arun',22,'Female',8,330);
insert into btrs_ticket_passengers values(102614662023617123456788,11,'Arun',22,'Male',17,330);
insert into btrs_ticket_passengers values(102614662023617123456788,12,'Arun',22,'Other',29,330);
insert into btrs_ticket_passengers values(102614662023617123456788,13,'Arun',22,'Other',30,330);
insert into btrs_ticket_passengers values(102614662023617123456788,13,'Arun',22,'Other',30,330);
insert into btrs_ticket_passengers values(102614662023617123456788,14,'Arun',22,'Female',18,330);
insert into btrs_ticket_passengers values(102614662023617123456788,15,'Arun',22,'Female',9,330);
insert into btrs_ticket_passengers values(102614662023617123456788,16,'Arun',22,'Female',10,330);
insert into btrs_ticket_passengers values(102614662023617123456788,17,'Arun',22,'Female',22,330);
insert into btrs_ticket_passengers values(102614662023617123456788,18,'Arun',22,'Female',19,330);
insert into btrs_ticket_passengers values(102614662023617123456788,19,'Arun',22,'Female',11,330);
insert into btrs_ticket_passengers values(102614662023617123456788,20,'Arun',22,'Male',16,330);
insert into btrs_ticket_passengers values(102614662023617123456788,21,'Arun',22,'Other',15,330);

insert into btrs_ticket_passengers values(102614662023617123456788,23,'Arun',22,'Female',26,330);

insert into btrs_ticket_passengers values(102614662023617123456788,22,'Arun',22,'Other',27,330);
insert into btrs_ticket_passengers values(102614662023617123456788,24,'Arun',22,'Male',28,330);
















select * from btrs_seat_book where service_id='1466';

select * from btrs_services where service_id='1466'

select * from btrs_ticket_passengers where booking_id='102614662023617123456788';

select * from btrs_tickets where booking_id='102614662023617123456788';



